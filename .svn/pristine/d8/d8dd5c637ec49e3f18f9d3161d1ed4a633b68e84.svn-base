import { Component, OnInit, OnDestroy } from '@angular/core';
import { NavController } from 'ionic-angular';
import { RegisterPage } from '../register/register';
import { TopupPage } from '../topup/topup';
import { TopupRecordPage } from '../topup-record/topup-record';
import { DeliveryRecordPage } from '../delivery-record/delivery-record';
import { OrderInfoPage } from '../order-info/order-info';
import { TAuth } from '../services';

@Component({
  selector: 'page-home',
  templateUrl: 'home.html'
})
export class HomePage implements OnInit, OnDestroy
{

  constructor(public auth: TAuth, public navCtrl: NavController) 
  {
    if (!this.InitData())
    {
      this.UserInfo = this.auth.UserInfo;
    }    
  }

  ngOnInit(): void
  {                
    console.log(this.UserInfo);
  }

  ngOnDestroy(): void
  {
    return;
  }

  ionViewDidLoad() 
  {
    // if (!this.InitData())
    // {
    //   return;
    // }
    
    // if (this.GetRoleType() < 0)
    // {
    //   this.auth.Reged = false;
    //   this.ResisgerUser();
    // }    
  }
  
  ionViewWillEnter()
  {
    console.log('view will enter!');
    if (!this.InitData())
    {
      console.log('not init data...')
      return;
    }


    let role_type = this.GetRoleType();
    if (role_type < 0)
    {
      if (this.auth.Reged)
      {
        this.UserInfo = this.auth.UserInfo;        
        this.InitMenus(this.UserInfo.role_type);
        this.auth.Reged = false;
      }
      else
      {
        this.auth.Reged = false;
        this.ResisgerUser();        
      }
    }
    else if (this.MenuItems == undefined)
    {
      this.InitMenus(role_type);

      if (this.auth.state.length > 5)
      {
        this.OpenOrder(this.auth.state);
      }
    }
  }

  InitMenus(RoleType)
  {
    this.MenuItems = [
      {
        'title': '配送记录',
        'icon': '&#xf315;',
        'tag': 0,
        'color': '#58b969'
      }];
      
    if (RoleType == 0)
    {
      this.title = '商家中心';
      this.role_name = '商家';
      this.MenuItems.push
      (
        {
          'title': '充值记录',
          'icon': '&#xf2b1;',
          'tag': 1,
          'color': '#FFD439'
        }
      );
    }

    this.role_type = RoleType;    
  }

  OpenItem(item)
  {
    switch(item.tag)
    {
      case 0:
        this.navCtrl.push(DeliveryRecordPage, {item: this.UserInfo});
        break;
      case 1:
        this.navCtrl.push(TopupRecordPage, {item: this.UserInfo});
        break;
      default:
        console.log('invalid item object');
    }
    
  }

  topup()
  {
    this.navCtrl.push(TopupPage, {item: this.UserInfo});
  }

  ResisgerUser()
  {
    this.navCtrl.push(RegisterPage, {item: this.UserInfo});
  }

  InitData(): Boolean
  {
    return this.UserInfo != undefined;
  }

  GetRoleType(): any
  {
    let result = -1;
    if (this.UserInfo != undefined)
    {
      if (this.UserInfo.role_type != undefined)
      {
        result = this.UserInfo.role_type;    
      }      
    }

    return result;
  }

  OpenOrder(order_no)
  {
    this.navCtrl.push(OrderInfoPage, {item: order_no});
  }

  private UserInfo;
  private MenuItems;  
  private title = '骑手中心';
  private role_name = '骑手';
  private role_type;
}
