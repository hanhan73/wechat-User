import { Injectable } from '@angular/core';
import { Http } from '@angular/http';
import {NavController} from 'ionic-angular';
import { TBasicService } from '../providers/basic-service';
import { DrawPage } from '../pages/draw/draw';
// import * as wx from 'jweixin'
// import { Wechat } from '../../typings/globals'
// import {stringify} from "@angular/core/src/util";
//npm install jweixin -s
//npm install @types/jweixin -D
//ionic build brower --prov
//cordova platform add brower
declare var WeixinJSBridge;
@Injectable()
export class TopupService extends TBasicService
{
  constructor(public http: Http,public  navctrl :NavController)
  {
    super(http);
    // let jsApiList = [];
    // jsApiList.push('chooseWXPay');

    // let conf = {
    //   "appId": '234234', // 必填，公众号的唯一标识
    //   "timestamp": 124422224, // 必填，生成签名的时间戳
    //   "nonceStr": '22234234', // 必填，生成签名的随机串
    //   "signature": '234234234', // 必填，签名，见附录1
    //   "jsApiList": jsApiList // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
    // };

    // wx.config(conf);
  }

  GetGoodItems()
  {
    return this.Get('topup_item');
  }

  pay(da)
  {
    WeixinJSBridge.invoke(
      'getBrandWCPayRequest',
      {
        "appId":da.appid,
        "timeStamp":da.time_stamp,
        "nonceStr":da.old_nonce_str,
        "package":"prepay_id="+da.prepay_id,
        "signType":"MD5",
        "paySign":da.pay_sign
      },
      function(res){
        WeixinJSBridge.log(res.err_msg);
        if(res.err_msg == 'get_brand_wcpay_request:ok') {
          console.log('daddsa');
          //跳转抽奖页面
          this.navctrl.push(DrawPage);
        }
    })


  }
  ToPay(da){
    if ( WeixinJSBridge == "undefined"){
      if( document.addEventListener ){
        document.addEventListener('WeixinJSBridgeReady', this.pay, false);
      }else if (document.addEventListener){
        document.addEventListener('WeixinJSBridgeReady', this.pay);
        document.addEventListener('onWeixinJSBridgeReady', this.pay);
      }
    }else{
      this.pay(da);
    }
  }

  Topup(openid, order_value, pay_value)
  {
    let param = {
      "openid": openid,
      "order_value": order_value,
      "pay_value": pay_value
    };

    return this.Post(param, 'merchant_new_order');
  }

  TopupRecord(customer_id, dt)
  {
    let param = {
      "customer_id": customer_id,
      "dt": dt
    };

    return this.Post(param, 'merchant_topup_record');
  }
}
