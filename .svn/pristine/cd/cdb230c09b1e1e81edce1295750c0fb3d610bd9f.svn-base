  /**
   * Created by Administrator on 2017/7/13/013.
   */
  import { ElementRef ,Component} from '@angular/core';
  import { NavController, NavParams } from 'ionic-angular';
  import { LoadingController, ToastController } from 'ionic-angular';
  import { TCommonPage } from '../basic-page';
  import { TAuth } from '../services';
  import { TopupService } from '../services';
  import { OrderPage } from '../order/order';
  import { HomePage } from '../home/home';
  import {error} from "jweixin";
  @Component({
    selector: 'page-srecharge',
    templateUrl: 'srecharge.html'
  })

  export class SrechargePage extends TCommonPage {


    constructor(private el: ElementRef,
                public navCtrl: NavController,
                public navParams: NavParams,
                public loadingCtrl: LoadingController,
                public toastCtrl: ToastController,
                public auth: TAuth, public top: TopupService) {
      super(navCtrl, navParams, loadingCtrl, toastCtrl);
      this.SrInit();
      // this.InitItems();
    }

    /**
     * 初始化
     * @param data
     * @constructor
     */
    SrInit() {
      if(localStorage.getItem('iccid') != null) {
        this.numCard = localStorage.getItem('iccid');
        localStorage.removeItem('iccid')

            this.auth.SelectCard(
              this.numCard
            ).then(
              data => this.CardInfoV(data),
              error => console.log(error)
            )

      }

    }

    CardInfoV(data) {
      this.CardInfo = data.data;

      if (this.CardInfo != null) {

        this.InitItems(this.CardInfo);
        this.Search();
          this.auth.AddInfo(
            this.numCard,
            this.numCard
          ).then(
            data => console.log(data),
            error => console.log(error)
          )
      }
      else {
        this.Clear();
        this.auth.presentToast('您输入的卡号不存在！');
      }
      console.log(this.numCard)
      console.log(this.CardInfo)
    }

    ToOrder() {
      if ( this.numCard !=null && this.CardInfo !=null ) {
        this.navCtrl.push(OrderPage,{item:this.numCard});
      }
      else {
        this.auth.presentToast('请输入卡号！')
      }
    }

    /**
     * 绑定设备
     * @constructor
     */
    Todevice() {
      if ( this.numCard !=null && this.CardInfo !=null ) {
        this.auth.login().then(
          data => {
            localStorage.setItem('token',data.token)
            this.auth.Device(null,this.numCard).then(
              data =>{
                this.auth.presentToast(data.msg)
                if(data.status == 1){
                  this.Loading();
                  this.navCtrl.push(HomePage);
                  this.FreeLoading();
                }
              },
              error =>console.log(error)
            )
          },
          error =>console.log(error)
        )
      }
      else {
        this.auth.presentToast('请输入卡号！')
      }


    }

    Bycard() {
      if ((this.numCard == '')|| (this.numCard == undefined)){
        this.auth.presentToast('请输入卡号！');
        this.CardInfo = null;
        this.Clear();
        return;
      }

      this.auth.SelectCard(
        this.numCard
      ).then(
        data =>this.CardInfoV(data),
        error =>console.log(error)
      )

    }

    private CardInfo;
    private numCard;



    InitItems(data)
    {
      this.items.push({"text": '1344444444442342342342', "style": 'item-histroy'});
      this.items.push({"text": '2344444444442342342342', "style": 'item-histroy'});
      this.items.push({"text": '3344444444442342342342', "style": 'item-histroy'});
      this.items.push({"text": '3344444444442342342342', "style": 'item-histroy'});
      this.items.push({"text": '4344444444442342342342', "style": 'item-histroy'});


        // console.log('======>not null')
        this.iccid = {
          "left_day": 212,
          "state": "正常使用",
          "used_flow": data.used_flow,
          "type": "1G/1个月非按清零"
        };
        this.total_flow = data.total_flow;
        this.flow = data.total_flow-data.used_flow;

    }

    Search()
    {
      console.log(this.numCard);
      //this.result_text = this.input_text;
      this.found = true;
      this.setAnimate();
    }

    getItems(ev: any)
    {
      if (this.is_select_event)
      {
        this.is_select_event = false;
        return;
      }

      let text = ev.value;
      if (text && text.trim() != '')
      {
        this.show_items = [];
        this.show_items = this.items.filter((item) => {
          return (item.text.indexOf(text) > -1);
        });

        if (this.CanShowHistroy())
        {
          this.show_items.push({"text": '系统会自记住您最近查询的5条记录', "style": 'basic-item-histroy'});
        }
      }
    }

    CanShowHistroy()
    {
      return this.show_items.length > 0;
    }

    SelectItem(value)
    {
      this.numCard = value;
      this.show_items = [];
      this.is_select_event = true;
    }

    IncFlow()
    {
      // this.flow =;
      console.log(this.flow)
      this.timer = setInterval(() => {
        if ( this.flow <= this.total_flow && this.flow > 0  ) {
          this.flow=this.flow;
        }
        else  {
          this.flow = 0;
        }
        // if (this.flow < this.total_flow)
        // {
        //   this.flow = this.flow + Math.floor(this.total_flow/30);
        //   if (this.flow >= this.total_flow)
        //   {
        //     this.flow = this.total_flow;
        //   }
        // }
      }, 100);

      setTimeout(() =>
      {
        clearInterval(this.timer);
        console.log("clear interval");
      }, 3000);

    }

    setAnimate()
    {
      this.animateIninitial = true;
      setTimeout(() =>
      {
        this.animateIninitial = false;
      }, 3000);

      this.IncFlow();
    }

    Clear()
    {
      this.flow = 0;
      this.found = false;
    }

    animateIninitial: boolean = false;
    found = false;
    private items = [];
    private show_items = [];
    private is_select_event = false;
    private total_flow ;
    private flow;
    private timer;

    private iccid;



  }
